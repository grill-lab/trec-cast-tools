
syntax = "proto3";


// A set of topics (e.g. year 3 evaluation). This allows loading and working
// with multiple topic sets more clearly.
message TopicSet {
    repeated Topic topics = 1;
    string label = 2;
}

// A topic is the basic unit of conversation topic. 
// It contains the title / description of the topic as well as the 
// conversational utterances for each turn in the conversation.
message Topic {
    // A unique number that identifies the topic.
    int32 number = 1;

    // A short 'title' description of the topic.
    string title = 2;

    // A long description of the topic.
    string description = 3;

    // The series of utterances / turns in the conversation.
    repeated Turn turn = 4;

    // The source of how the topic was created.
    Source topic_source = 5;
}

// The source stores where the topic was created from including
// important metadata about its provenance.
message Source {
    // A short description of the provenance of the topic,
    // e.g. MARCO, Session track, or other TREC track.
    // We might consider making this a struct / enum.
    SourceType provenance = 1;

    // Additional metadata about the source, e.g. the topic
    // id or external identifying information.
    string metadata = 2;

    // The type of topic.
    enum SourceType {
        MANUAL = 0;
        MARCO = 1;
        SESSION_TRACK = 2;
        TREC_CAR = 3;
        TREC_OTHER = 4;
        KNOWLEDGE_GRAPH = 5;
    }
}

// Turn is a single step in the conversation, representing a single
// user utterance, roughly corresponding to a single 'query'.
message Turn {

    // A numeric turn identifiers for this turn indicating its position
    // in the dialog.
    int32 number = 1;

    // Required: the user query / utterance for this turn.
    string raw_utterance = 2;

    // A 'clean' utterance with coreference and explicit context
    // resolved.
    string rewritten_utterance = 3;

    // A rewwritten utterance with coreference and explicit context
    // automatically resolved.
    string automatic_rewritten_utterance = 4;

    // The canonical result id returned by the automatic system.
    string automatic_canonical_result_id = 5;

    // A 'clean' utterance with coreference and explicit context
    // resolved, "same as rewritten_utterance"
    string manual_rewritten_utterance = 6;

    // The canonical result id returned by the manual system.
    string manual_canonical_result_id = 7;

    // The TRUE canonical result.
    string canonical_result_id = 8;

    // A custom rewwritten utterance
    string custom_rewritten_utterance = 9;

    // Dependent parent turn for query dependence
    repeated int32 query_turn_dependence = 10;

    // Dependent parent turn for result dependence
    int32 result_turn_dependence = 11;

    // Most relevant passage from the canonical results
    string passage = 12;

    // ID of the passage from the canonical result based on Spacy passage chunking.
    int32 passage_id = 13;



}
